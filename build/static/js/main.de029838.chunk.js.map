{"version":3,"sources":["components/Addtodo.js","components/Todo.js","components/Todos.js","components/layouts/Footer.js","components/TodoBoard.js","components/reducers/todoReducer.js","App.js","reportWebVitals.js","index.js"],"names":["Addtodo","dispatchTodo","useState","todoTitle","setTodoTitle","todoDesc","setTodoDesc","className","onSubmit","e","preventDefault","id","Math","random","toString","substr","type","todo","title","desc","isActive","htmlFor","onChange","target","value","placeholder","maxLength","required","Todo","toggleTodoButton","toggleTodoIcon","toggleTodoText","toggleTodoDesc","toggleTodoArticle","toggleTodo","onClickArticle","onClick","test","Todos","todos","length","map","style","textAlign","Footer","href","TodoBoard","todoReducer","action","filter","localTodo","localStorage","getItem","JSON","parse","App","useReducer","useEffect","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de029838.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { VscAdd } from 'react-icons/vsc';\nimport '../style/Addtodo.scss';\n\nconst Addtodo = ({ dispatchTodo }) => {\n  const [todoTitle, setTodoTitle] = useState('');\n  const [todoDesc, setTodoDesc] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (todoTitle && todoDesc) {\n      const id = Math.random().toString(16).substr(2, 10);\n      dispatchTodo({\n        type: 'ADD_TODO',\n        todo: {\n          id,\n          title: todoTitle,\n          desc: todoDesc,\n          isActive: true,\n        },\n      });\n      setTodoTitle('');\n      setTodoDesc('');\n    }\n  };\n\n  return (\n    <section className='form_add__container'>\n      <form className='form_add' onSubmit={onSubmit}>\n        <article className='form_add__input'>\n          <label htmlFor='title' className='form_add__label'>Title:</label>\n          <input type='text' id='title'\n          onChange={e => setTodoTitle(e.target.value)}\n          value={todoTitle} className='form_add__input__title'\n          placeholder='Type max 15 char.....'\n          maxLength='15'\n          required />\n          <label htmlFor='desc' className='form_add__label'>Description:</label>\n          <input type='text' id='desc'\n          onChange={e => setTodoDesc(e.target.value)}\n          value={todoDesc} className='form_add__input__desc'\n          placeholder='Type max 45 char.....'\n          maxLength='45'\n          required />\n        </article>\n        <button className='form_add__btn'>\n        <VscAdd className='form_add__btn__icon' />\n        Add\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default Addtodo;\n","import { FaTrashAlt } from 'react-icons/fa';\n\nconst Todo = ({ todo, dispatchTodo }) => {\n  const toggleTodoButton = todo.isActive ? 'todo__btn' : 'todo__btn todo__btn--done';\n  const toggleTodoIcon = todo.isActive ? 'todo__btn__icon' : 'todo__btn__icon todo__btn__icon--done';\n  const toggleTodoText = todo.isActive ? 'todo__article__text__title' : 'todo__article__text__title todo__article__text--done';\n  const toggleTodoDesc = todo.isActive ? 'todo__article__text' : 'todo__article__text todo__article__text--done';\n  const toggleTodoArticle = todo.isActive ? 'todo__article' : 'todo__article todo__article--done';\n  const toggleTodo = todo.isActive ? 'todo' : 'todo todo--done';\n\n  const onClickArticle = () => {\n    dispatchTodo({ type: 'CHANGE_STATUS', todo });\n  };\n\n  const onClickBtn = e => {\n    const targetClassDone = /done/.test(e.target.className);\n    if (targetClassDone) {\n      return dispatchTodo({ type: 'DEL_TODO', todo });\n    }\n    return onClickArticle();\n  };\n\n  const onClickIcon = () => dispatchTodo({ type: 'DEL_TODO', todo });\n\n  return (\n    <section className={toggleTodo}>\n      <article className={toggleTodoArticle} onClick={onClickArticle}>\n        <h3 className={toggleTodoText}>{todo.title}</h3>\n        <p className={toggleTodoDesc}>{todo.desc}</p>\n      </article>\n      <button\n        className={toggleTodoButton}\n        onClick={onClickBtn}>\n        <FaTrashAlt\n        className={toggleTodoIcon}\n        onClick={onClickIcon}/>\n      </button>\n    </section>\n  );\n};\n\nexport default Todo;\n","import Todo from './Todo';\n\nconst Todos = ({ todos, dispatchTodo }) => (\n    <div className='todos'>\n      {todos.length > 0\n        ? todos.map(todo => (\n        <Todo key={todo.id} todo={todo}\n        dispatchTodo={dispatchTodo} />))\n        : <h3 style={{ textAlign: 'center' }}>There is no ToDo for today</h3>}\n    </div>\n);\n\nexport default Todos;\n","import { GoMarkGithub } from 'react-icons/go';\n\nconst Footer = () => (\n    <footer className='footer'>\n      <a className='footer__link'\n      href='https://github.com/Tottzi'\n      target='_blank'>\n        <GoMarkGithub className='footer__icon'/>\n      </a>\n    </footer>\n);\n\nexport default Footer;\n","import Addtodo from './Addtodo';\nimport Todos from './Todos';\nimport Footer from './layouts/Footer';\n\nconst TodoBoard = ({ todos, dispatchTodo }) => (\n    <div className='todoBoard'>\n      <Addtodo dispatchTodo={dispatchTodo} />\n      <Todos todos={todos}\n      dispatchTodo={dispatchTodo} />\n      <Footer />\n    </div>\n);\n\nexport default TodoBoard;\n","export const todoReducer = (todos, action) => {\n  switch (action.type) {\n    case 'CHANGE_STATUS':\n      return todos.map(todo => (todo.id === action.todo.id\n        ? { ...todo, isActive: !todo.isActive }\n        : todo));\n    case 'DEL_TODO':\n      return todos.filter(todo => todo.id !== action.todo.id);\n    case 'ADD_TODO':\n      return [...todos, action.todo];\n    default:\n      return todos;\n  }\n};\n\nexport default todoReducer;\n","import { useReducer, useEffect } from 'react';\nimport './style/App.scss';\nimport TodoBoard from './components/TodoBoard';\nimport { todoReducer } from './components/reducers/todoReducer';\n\nconst localTodo = localStorage.getItem('saltTodo') ? JSON.parse(localStorage.getItem('saltTodo')) : [];\n\nfunction App() {\n  const [todos, dispatchTodo] = useReducer(todoReducer, localTodo);\n\n  useEffect(() => {\n    localStorage.setItem('saltTodo', JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <div className=\"App\">\n      <TodoBoard todos={todos} dispatchTodo={dispatchTodo} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}